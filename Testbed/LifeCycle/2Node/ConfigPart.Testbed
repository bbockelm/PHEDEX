### ENVIRON common
PHEDEX_INSTANCE=2Node;
export PHEDEX_INSTANCE;

[ -z "$PHEDEX_SITE" ] && { echo 'PHEDEX_SITE not set' 1>&2; exit 1; };
[ -z "$PHEDEX_INSTANCE" ] && { echo 'PHEDEX_INSTANCE not set' 1>&2; exit 1; };
[ -z "$PHEDEX_CONTEXT" ] && { echo 'PHEDEX_CONTEXT not set' 1>&2; exit 1; };

PHEDEX_CONFIG=${LIFECYCLE}/${PHEDEX_INSTANCE}; export PHEDEX_CONFIG
PHEDEX_STATE=${TESTBED_ROOT}/${PHEDEX_INSTANCE}/${PHEDEX_CONTEXT}/state;
PHEDEX_LOGS=${TESTBED_ROOT}/${PHEDEX_INSTANCE}/${PHEDEX_CONTEXT}/logs;
PHEDEX_SCRIPTS=${PHEDEX_ROOT};
#PHEDEX_MAP=${PHEDEX_CONFIG}/tfc.xml;
PHEDEX_MSS=`echo ${PHEDEX_NODE}_MSS |sed 's|_Buffer||' |sed 's|_Export||'`;

# prepare authentication env variables
#unset X509_USER_KEY X509_USER_CERT;
#unset X509_USER_PROXY;

# Here you can override the value which comes with oracle-env package, PHEDEX-lifecycle depends upon
# TNS_ADMIN= 

# Debug on
PHEDEX_DEBUG=0; export PHEDEX_DEBUG;
PHEDEX_VERBOSE=0; export PHEDEX_VERBOSE;

# Purely for debugging purposes, use it only if you know what you are doing...
PHEDEX_DEBUGGER="rlwrap perl -MPHEDEX::Debug -d"; export PHEDEX_DEBUGGER;

### ENVIRON phedex

### ENVIRON lifecycle
. $TESTBED_ROOT/env-lifecycle.sh;
